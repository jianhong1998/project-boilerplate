# =======================================================
# TurboRepo DB Migration Dockerfile - Optimized for Performance
# =======================================================

# =======================================================
# Base Stage - Common dependencies
# =======================================================
FROM node:22.14.0-slim AS base

# Install pnpm globally in base layer (rarely changes)
RUN npm install -g pnpm@latest

WORKDIR /app

# =======================================================
# Dependencies Stage - Install all dependencies
# =======================================================
FROM base AS deps

# Copy workspace configuration files (changes infrequently)
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY turbo.json ./

# Copy package.json files for all workspaces
COPY packages/types/package.json ./packages/types/
COPY backend/package.json ./backend/

# Install all dependencies (including dev deps for build)
RUN pnpm install --frozen-lockfile

# =======================================================
# Build Stage - Build shared packages and backend
# =======================================================
FROM deps AS build

# Copy shared package source code first
COPY packages/ ./packages/

# Copy backend source code
COPY backend/ ./backend/

# Build shared packages and backend using TurboRepo (efficient caching)
RUN pnpm run build --filter=backend

# =======================================================
# Production Dependencies Stage
# =======================================================
FROM base AS prod-deps

# Copy workspace configuration
COPY package.json pnpm-workspace.yaml pnpm-lock.yaml ./
COPY packages/types/package.json ./packages/types/
COPY backend/package.json ./backend/

# Install only production dependencies
RUN pnpm install --frozen-lockfile --prod

# =======================================================
# Final Migration Stage - Optimized runtime
# =======================================================
FROM prod-deps AS migration

# Copy built application from build stage
COPY --from=build /app/backend/dist ./backend/dist
COPY --from=build /app/packages/types/dist ./packages/types/dist

# Set working directory to backend for runtime
WORKDIR /app/backend

# Use specific migration command for better performance
CMD ["pnpm", "run", "migration:run"]